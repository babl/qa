input {
  kafka {
    #zk_connect => "zookeeper:2181"
    zk_connect => "v5.babl.sh:2181"
    topic_id => "logs.raw"
    add_field => {
      "[@metadata][__input]" => "kafka"
      "[@metadata][__input__logs]" => "logs.raw"
    }
  }
}
filter {
  #----------------------
  # Check if message contains a non-empty RID property, evaluate if service is supervisor2/babl-server
  #----------------------
  if [@metadata][__input] == "kafka" and [@metadata][__input__logs] == "logs.raw" and [MESSAGE] =~ "\"rid\":.*" {

    #----------------------
    # evaluate service: supervisor2 / babl-server
    #----------------------
    if [CONTAINER_NAME] =~ "supervisor.*" {
      mutate {
        add_field => {
          "host" => "%{_HOSTNAME}"
          "service" => "supervisor2"
          "supervisor" => "supervisor2"
        }
      }
    } else {
      mutate {
        add_field => {
          "host" => "%{_HOSTNAME}"
          "service" => "babl-server"
          "module_raw" => "%{CONTAINER_NAME}"
          "module_version" => "v0"
        }
      }

      mutate {
        split => { "module_raw" => "." }
      }
      mutate {
        rename => [ "[module_raw][0]", "module" ]
        remove_field => "module_raw"
      }
      mutate {
        gsub => [ "module", "--", "/" ]
      }
    }
    #----------------------
    # end
    #----------------------
  }

  #----------------------
  # Supervisor2
  #----------------------
  if [service] == "supervisor2" {

    if [MESSAGE] =~ "^\{" {

      # parse message
      json {
        source => "MESSAGE"
        target => "data"
      }
      mutate {
        rename => {
          "[data][rid]" => "rid"
          "[data][key]" => "key"
          "[data][msg]" => "message"
          "[data][duration_ms]" => "duration_ms"
          "[data][error]" => "message_error"
          "[data][exitcode]" => "exitcode"
          "[data][level]" => "level"
          "[data][status]" => "status"
          "[data][stderr]" => "stderr"
          "[data][stdin]" => "stdin"
          "[data][stdout]" => "stdout"
          "[data][topics][0]" => "topic"
          "[data][topic]" => "topic"
          "[data][partition]" => "partition"
          "[data][offset]" => "offset"
          "[data][time]" => "timestamp"
        }
        convert => {
          "rid" => "string"
          "stdin" => "integer"
          "stdout" => "integer"
          "stderr" => "string"
          "exitcode" => "integer"
          "status" => "integer"
          "duration_ms" => "float"
        }
      }

      # pipes supervisor2 messages with "rid": into kafka.logs.qa
      if [MESSAGE] =~ "\"rid\":.*" and [rid] != "" {
        mutate {
          add_field => {
            "[@metadata][__output__logs]" => "logs.qa"
            "[@metadata][__rawdata]" => true
            # "[@metadata][__debug]" => true
          }
        }
      }

      # remove data field
      mutate {
        remove_field => ["data"]
      }
    }
    #----------------------
    #endif [message]
    #----------------------
  }
  #----------------------
  #endif [service] == "babl-server"
  #----------------------

  #----------------------
  # Babl-Server
  #----------------------
  if [service] == "babl-server" {

    if [MESSAGE] =~ "^\{" {

      # parse message
      json {
        source => "MESSAGE"
        target => "data"
      }
      # INFO: do not rename: "[data][msg]" => "message (see the last block)"
      mutate {
        rename => {
          "[data][rid]" => "rid"
          "[data][key]" => "key"
          "[data][msg]" => "message"
          "[data][duration_ms]" => "duration_ms"
          "[data][error]" => "message_error"
          "[data][exitcode]" => "exitcode"
          "[data][level]" => "level"
          "[data][status]" => "status"
          "[data][stderr]" => "stderr"
          "[data][stdin]" => "stdin"
          "[data][stdout]" => "stdout"
          "[data][topics][0]" => "topic"
          "[data][topic]" => "topic"
          "[data][partition]" => "partition"
          "[data][offset]" => "offset"
          "[data][time]" => "timestamp"
        }
        convert => {
          "rid" => "string"
          "stdin" => "integer"
          "stdout" => "integer"
          "stderr" => "string"
          "exitcode" => "integer"
          "status" => "integer"
          "duration_ms" => "float"
        }
      }

      # pipes babl-server messages with "rid": into kafka.logs.qa
      if [MESSAGE] =~ "\"rid\":.*" and [rid] != "" {
        mutate {
          add_field => {
            "[@metadata][__output__logs]" => "logs.qa"
            "[@metadata][__rawdata]" => true
            # "[@metadata][__debug]" => true
          }
        }
      }

      # remove data field
      mutate {
        remove_field => ["data"]
      }
    }
    #----------------------
    #endif [message]
    #----------------------
  }
  #----------------------
  #endif [service] == "babl-server"
  #----------------------


  #----------------------
  # rename original fields into 'rawdata' property
  #----------------------
  if [@metadata][__rawdata] {
    mutate {
      # "[MESSAGE]" => "[rawdata][MESSAGE]"
      rename => {
        "[_SOURCE_REALTIME_TIMESTAMP]" => "[rawdata][_SOURCE_REALTIME_TIMESTAMP]"
        "[__REALTIME_TIMESTAMP]" => "[rawdata][__REALTIME_TIMESTAMP]"
        "[__MONOTONIC_TIMESTAMP]" => "[rawdata][__MONOTONIC_TIMESTAMP]"
        "[_BOOT_ID]" => "[rawdata][_BOOT_ID]"
        "[CONTAINER_TAG]" => "[rawdata][CONTAINER_TAG]"
        "[_TRANSPORT]" => "[rawdata][_TRANSPORT]"
        "[_PID]" => "[rawdata][_PID]"
        "[_UID]" => "[rawdata][_UID]"
        "[_GID]" => "[rawdata][_GID]"
        "[_COMM]" => "[rawdata][_COMM]"
        "[_EXE]" => "[rawdata][_EXE]"
        "[_CAP_EFFECTIVE]" => "[rawdata][_CAP_EFFECTIVE]"
        "[_SYSTEMD_CGROUP]" => "[rawdata][_SYSTEMD_CGROUP]"
        "[_SYSTEMD_UNIT]" => "[rawdata][_SYSTEMD_UNIT]"
        "[_SYSTEMD_SLICE]" => "[rawdata][_SYSTEMD_SLICE]"
        "[_SELINUX_CONTEXT]" => "[rawdata][_SELINUX_CONTEXT]"
        "[_MACHINE_ID]" => "[rawdata][_MACHINE_ID]"
        "[PRIORITY]" => "[rawdata][PRIORITY]"
        "[CONTAINER_ID]" => "[rawdata][CONTAINER_ID]"
        "[CONTAINER_ID_FULL]" => "[rawdata][CONTAINER_ID_FULL]"
        "[CONTAINER_NAME]" => "[rawdata][CONTAINER_NAME]"
        "[_CMDLINE]" => "[rawdata][_CMDLINE]"
        "[_HOSTNAME]" => "[rawdata][_HOSTNAME]"
        "[__CURSOR]" => "[rawdata][__CURSOR]"
      }
    }
  }
  # mutate { add_field => { "[@metadata][__rawdata_silence]" => true } }
  if [@metadata][__rawdata_silence] {
    mutate {
      remove_field => ["rawdata"]
    }
  }
  #----------------------
  #end 'rawdata'
  #----------------------
}
output {
  # For debugging
  # stdout { codec => rubydebug { metadata => true } }

  # NOTE: to debug use: mutate { add_field => { "[@metadata][__debug]" => true } }
  if [@metadata][__debug] {
    stdout { codec => rubydebug { metadata => true } }
  }

  logmatic {
    key => "4dqrnLLkSzWOh_kg1sroMA"
  }

  if [@metadata][__output__logs] {
    kafka {
      # bootstrap_servers => "kafka:9092"
      bootstrap_servers => "v5.babl.sh:9092"
      topic_id => "%{[@metadata][__output__logs]}"
    }
  }
}